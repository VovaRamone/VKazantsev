// Задайте одномерный массив, заполненный случайными числами. Найдите сумму элементов, стоящих на нечётных позициях.

// Создаём метод, который будет генерировать массив (входные значения: длина массива, минимальное и максимальное значение массива)
int[] Gen1DArr(int len, int min, int max)
{
    // Цикл для проверки максимального числа
    if (min > max)
    {
        int buf = min;
        min = max;
        max = buf;
    }
    // Создаём переменную rand, выделяем под неё новый объект. Переменная будет генерировать случайное значение.
    Random rand = new Random();
    // Создаём массив, выделяем под него новый объект. В массив положим длину массива, которую введем в консоль
    int[] arr = new int[len];
    // Создаём цикл for для определения длины массива
    for (int i = 0; i < len; i++)
    {
        // В массив ложим следующее случайное минимальное либо максимальное число
        arr[i] = rand.Next(min, max + 1);
    }
    // Возвращаем результат
    return arr;
}

// Создаём метод для вывода полученного результата в консоль
void Print1DArr(int[] arr)
{
    // Выводим сообщение в консоль
    Console.Write("[");
    // Создаём цикл for для заполнения массива данными
    for (int i = 0; i < arr.Length - 1; i++)
    {
        // Выводим сообщение в консоль, с сгенирированными числами из метода Gen1DArr
        Console.Write($"{arr[i]}, ");
    }
    // Выводим сообщение в консоль. Последний элемент массива.
    Console.WriteLine($"{arr[arr.Length - 1]}]");
}
// Создаём метод для печати в консоль
void PrintData(string msg)
{
    Console.WriteLine(msg);
}

// Генерируем одномерный массив, указав необходимые данные
int[] arr = Gen1DArr(10, -100, 100);

// Печатаем массив
Print1DArr(arr);

// Находим сумму элементов на нечётных позициях при помощи цикла for
int sum = 0;
for (int i = 1; i < arr.Length; i += 2)
{
    sum += arr[i];
}

// Выводим полученный результат
PrintData($"Сумма элементов массива на нечетных позициях равна: {sum}");