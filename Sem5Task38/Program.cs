// Задайте массив вещественных чисел. Найдите разницу между максимальным и минимальным элементов массива.
// * Отсортируйте массив методом вставки

// Создаём метод, который будет генерировать массив (входные значения: длина массива, минимальное и максимальное значение массива)
double[] Gen1DArr(int len, int min, int max)
{
    // // Проверка на то, что max больше либо равен min, если минимальное значение больше чем максимальное, меняем их местами
    if (min > max) 
    {        
        int buf = min;
        min = max;
        max = buf;
    }
    // Создаём переменную rand, выделяем под неё новый объект. Переменная будет генерировать случайное значение.
    Random rand = new Random();
    // Создаём массив, выделяем под него новый объект. В массив положим длину массива, которую введем в консоль
    double[] arr = new double[len];
    for (int i = 0; i < arr.Length; i++)
    {
        // Генерируем случайное число типа double (т.к. нам нужны вещественные числа) между min и max и положим его в массив
        arr[i] = (max - min) * rand.NextDouble() + min;
    }
    // Возвращаем результат
    return arr;
}

// Создаём метод для вывода полученного результата в консоль
void Print1DArr(double[] arr)
{
    Console.Write("[");
    for (int i = 0; i < arr.Length - 1; i++)
    {
        Console.Write(arr[i] + ", ");
    }
    Console.Write(arr[arr.Length - 1] + "]");
}

// Генерируем массив вещественных чисел при помощи метода Gen1DArr, задав необходимые значения
double[] arr = Gen1DArr(10, -10, 10);

// Находим разницу между максимальным и минимальным элементом массива
// Инициализируем максимальное значение, как минимально возможное значение
double max = double.MinValue;
// Инициализируем минимальное значение, как максимально возможное значение
double min = double.MaxValue;
// Для этого применим цикл for
for (int i = 0; i < arr.Length; i++)
{
    // Проверяем, если текущий элемент больше чем текущий максимум
    if (arr[i] > max)
    { 
        // Тогда помещаем текущий элемент в максимум
        max = arr[i];
    }
    // Проверяем, если текущий элемент меньше чем текущий минимум
    if (arr[i] < min)
    { 
        // Тогда помещаем текущий элемент в минимум
        min = arr[i];
    }
}

// Вычисляем разницу между максимальным и минимальным значением
double diff = max - min;
// Выводим результат в консоль
Console.WriteLine("Разница между максимальным и минимальным элементом массива: " + diff);

// Сортируем массив методом вставки
for (int i = 1; i < arr.Length; i++)
{
    // Итерация по массиву от второго элемента к последнему
    // Сохраним текущий элемент в переменную key
    double key = arr[i];
    // Инициализируем переменную j, как индекс предыдущего элемента
    int j = i - 1;
    // Создаём цикл while. Пока j является допустимым индексом, а предыдущий элемент больше значения в переменной key
    while (j >= 0 && arr[j] > key)
    {
        // Перемещаем предыдущий элемент вверх на один индекс
        arr[j + 1] = arr[j];
        // Уменьшаем переменную j на единичку, после каждого прохода цикла
        j--;
    }
    // Помещаем переменную key на корректную позицию массива
    arr[j + 1] = key; // Insert the key into its correct position
}

// Выводим отсортированный массив в консоль
Print1DArr(arr);